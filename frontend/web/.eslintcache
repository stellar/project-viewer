[{"/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/index.js":"1","/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/App.js":"2","/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/reportWebVitals.js":"3","/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/components/molecules/Form/Form.js":"4","/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/components/molecules/LabelledInput/LabelledInput.js":"5","/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/api/getCorridorInfo.js":"6","/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/components/molecules/DataTable/DataTable.js":"7","/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/api/getVolumeInfo.js":"8"},{"size":500,"mtime":1607376218013,"results":"9","hashOfConfig":"10"},{"size":793,"mtime":1607376218012,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607376218014,"results":"12","hashOfConfig":"10"},{"size":2761,"mtime":1607376926547,"results":"13","hashOfConfig":"10"},{"size":392,"mtime":1607376559978,"results":"14","hashOfConfig":"10"},{"size":365,"mtime":1607376218012,"results":"15","hashOfConfig":"10"},{"size":235,"mtime":1607376218013,"results":"16","hashOfConfig":"10"},{"size":308,"mtime":1607376218012,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1d4v37b",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/index.js",[],["38","39"],"/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/App.js",["40"],"import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/molecules/Form/Form';\nimport DataTable from './components/molecules/DataTable/DataTable';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: \"\"\n    }\n    this.queryResultHandler = this.queryResultHandler.bind(this)\n  }\n\n  queryResultHandler(response) {\n    this.setState({\n      data: JSON.stringify(response.results)\n    })\n    console.log(\"From parent, now our state is\", this.state)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form handler={this.queryResultHandler} baseUrl=\"http://localhost:8080\"/>\n        <DataTable data={this.state.data}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/reportWebVitals.js",[],"/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/components/molecules/Form/Form.js",[],"/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/components/molecules/LabelledInput/LabelledInput.js",[],"/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/api/getCorridorInfo.js",["41"],"export default (baseUrl, fromCode, fromIssuer, toCode, toIssuer) => {\n    let corridorURL = baseUrl + `/corridor?sourceCode=${fromCode}&sourceIssuer=${fromIssuer}&destCode=${toCode}&destIssuer=${toIssuer}`\n    return fetch(corridorURL, {\n        method: \"GET\",\n    }).then(resp => {\n        console.log(\"Got response: \", resp)\n        return resp.json();\n    });\n};","/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/components/molecules/DataTable/DataTable.js",[],"/Users/isaiahturner/Desktop/StellarWorkspace/project-viewer/frontend/web/src/api/getVolumeInfo.js",["42"],"export default (baseUrl, code, issuer, volumeFrom) => {\n    let volumeURL = baseUrl + `/volume?code=${code}&issuer=${issuer}&volumeFrom=${volumeFrom}`\n    return fetch(volumeURL, {\n        method: \"GET\",\n    }).then(resp => {\n        console.log(\"Got response: \", resp)\n        return resp.json();\n    });\n};",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"51","severity":1,"message":"52","line":1,"column":1,"nodeType":"53","endLine":9,"endColumn":3},{"ruleId":"51","severity":1,"message":"52","line":1,"column":1,"nodeType":"53","endLine":9,"endColumn":3},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]